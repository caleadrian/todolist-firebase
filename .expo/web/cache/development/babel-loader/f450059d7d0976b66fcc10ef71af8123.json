{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cale\\\\Documents\\\\projects\\\\todolist-firebase\\\\App\\\\Component\\\\TodoList.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport firebase from 'firebase';\nimport { v4 as uuidv4, v4 } from 'uuid';\nimport TextField from \"./TextField\";\nimport List from \"./List\";\nexport default function TodoList(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var list = '';\n  var firebaseConfig = {\n    apiKey: \"AIzaSyC9HyXPJd59XXPD6BfbhESMONRV85YyT8Y\",\n    authDomain: \"todolist-firebase-81780.firebaseapp.com\",\n    databaseURL: \"https://todolist-firebase-81780.firebaseio.com\",\n    projectId: \"todolist-firebase-81780\",\n    storageBucket: \"todolist-firebase-81780.appspot.com\",\n    messagingSenderId: \"496181121735\",\n    appId: \"1:496181121735:web:cb0d9936acfed227ca24e2\",\n    measurementId: \"G-85N95MDVNT\"\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  var addTodo = function addTodo(value) {\n    if (value) {\n      firebase.database().ref('todo/' + v4()).set({\n        text: value\n      }).then(function () {\n        console.log('Successfully inserted');\n      });\n    } else {\n      console.log('Please enter a text');\n    }\n  };\n\n  var removeTodo = function removeTodo(id) {\n    firebase.database().ref('todo/' + id).remove().then(function () {\n      console.log('Successfully removed');\n    }).catch(function (err) {\n      console.log(\"Error : \" + err);\n    });\n  };\n\n  var update = function update(value, id) {\n    firebase.database().ref('todo/' + id).update({\n      text: value\n    }).then(function () {\n      console.log('data is updated');\n    });\n  };\n\n  useEffect(function () {\n    firebase.database().ref('todo').on('value', function (data) {\n      var obj = Object.entries(data.toJSON());\n      setTodos(obj);\n      console.log(todos);\n    });\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"TODO LIST\")), React.createElement(TextField, {\n    onAddTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(List, {\n    todos: todos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    margin: 10,\n    backgroundColor: '#FFF'\n  },\n  header: {\n    backgroundColor: 'dodgerblue',\n    paddingVertical: 5\n  },\n  headerText: {\n    textAlign: 'center',\n    color: '#FFF',\n    fontSize: 15,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Cale/Documents/projects/todolist-firebase/App/Component/TodoList.js"],"names":["React","useState","useEffect","firebase","v4","uuidv4","TextField","List","TodoList","props","todos","setTodos","list","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","addTodo","value","database","ref","set","text","then","console","log","removeTodo","id","remove","catch","err","update","on","data","obj","Object","entries","toJSON","styles","container","header","headerText","StyleSheet","create","margin","backgroundColor","paddingVertical","textAlign","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {useState, useEffect}  from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport firebase from 'firebase';\r\nimport { v4 as uuidv4, v4 } from 'uuid';\r\n\r\nimport TextField from './TextField';\r\nimport List from './List';\r\n\r\nexport default function TodoList(props){\r\n\r\n    const [todos, setTodos] = useState({});\r\n    const list = '';\r\n\r\n    const firebaseConfig = {\r\n        apiKey: \"AIzaSyC9HyXPJd59XXPD6BfbhESMONRV85YyT8Y\",\r\n        authDomain: \"todolist-firebase-81780.firebaseapp.com\",\r\n        databaseURL: \"https://todolist-firebase-81780.firebaseio.com\",\r\n        projectId: \"todolist-firebase-81780\",\r\n        storageBucket: \"todolist-firebase-81780.appspot.com\",\r\n        messagingSenderId: \"496181121735\",\r\n        appId: \"1:496181121735:web:cb0d9936acfed227ca24e2\",\r\n        measurementId: \"G-85N95MDVNT\"\r\n    };\r\n\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig)\r\n    }\r\n  \r\n    const addTodo = (value) => {\r\n        if(value){\r\n            firebase.database().ref('todo/' + v4()).set({\r\n                text: value\r\n            }).then(() => {\r\n                console.log('Successfully inserted');\r\n            });\r\n        }else{\r\n            console.log('Please enter a text');\r\n        }\r\n\r\n    }\r\n  \r\n    const removeTodo = (id) => {\r\n      firebase.database().ref('todo/' + id).remove()\r\n        .then(()=>{\r\n          console.log('Successfully removed');\r\n        })\r\n        .catch((err) =>{\r\n          console.log(\"Error : \" + err);\r\n        })\r\n    }\r\n  \r\n    const update = (value, id) => {\r\n      firebase.database().ref('todo/'+ id).update({\r\n        text: value\r\n      }).then(()=>{\r\n        console.log('data is updated');\r\n      })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        firebase.database().ref('todo').on('value', (data)=>{\r\n\r\n            const obj = Object.entries(data.toJSON());\r\n            setTodos(obj);\r\n    \r\n            console.log(todos)\r\n    \r\n        //    obj.forEach(([key, value]) => {\r\n        //     console.log(key);\r\n        //     console.log(value);\r\n        //    })\r\n    \r\n        })\r\n    });\r\n  \r\n\r\n\r\n\r\n\r\n\r\n return(\r\n  <View style={styles.container}>\r\n      <View style={styles.header}>\r\n          <Text style={styles.headerText}>TODO LIST</Text>\r\n      </View>\r\n      <TextField onAddTodo={addTodo}/>\r\n      <List todos={todos} />\r\n\r\n  </View>\r\n );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container : {\r\n        margin: 10,\r\n        backgroundColor: '#FFF'\r\n    },\r\n    header: {\r\n        backgroundColor: 'dodgerblue',\r\n        paddingVertical: 5\r\n    },\r\n    headerText: {\r\n        textAlign: 'center',\r\n        color: '#FFF',\r\n        fontSize: 15,\r\n        fontWeight: 'bold'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}