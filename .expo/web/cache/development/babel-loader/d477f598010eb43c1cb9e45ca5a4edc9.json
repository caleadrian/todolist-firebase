{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cale\\\\Documents\\\\projects\\\\todolist-firebase\\\\App\\\\Component\\\\List.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nexport default function List(props) {\n  var obj = props.todos ? Object.entries(props.todos) : null;\n  var items = [];\n\n  var swipeRightOpen = function swipeRightOpen(progress, key) {\n    setTimeout(function () {\n      props.onRemove(key);\n    }, 500);\n  };\n\n  var swipeRight = function swipeRight() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'firebrick',\n        justifyContent: 'center',\n        alignItems: 'flex-end',\n        paddingVertical: 10,\n        paddingHorizontal: 13,\n        marginVertical: 5,\n        borderRadius: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        paddingHorizontal: 10,\n        fontWeight: '600'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Delete\"));\n  };\n\n  if (obj != null) {\n    obj.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      items.push(React.createElement(Swipeable, {\n        onSwipeableRightOpen: function onSwipeableRightOpen(progress) {\n          return swipeRightOpen(progress, key);\n        },\n        renderRightActions: swipeRight,\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }\n      }, React.createElement(View, {\n        style: styles.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          textDecorationLine: value.isCompleted ? 'line-through' : 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, value.text), React.createElement(CheckBox, {\n        style: styles.checkbox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }\n      }))));\n    });\n  } else {\n    items.push(React.createElement(Text, {\n      key: 1,\n      style: styles.noItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }\n    }, \"NO ITEM\"));\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, items);\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 10\n  },\n  items: {\n    width: '100%',\n    flex: 1,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    backgroundColor: '#FFF',\n    marginVertical: 5,\n    borderRadius: 20,\n    shadowColor: \"#646464\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    alignItems: 'flex-start'\n  },\n  noItem: {\n    width: '100%',\n    padding: 10,\n    color: 'red',\n    marginVertical: 2,\n    borderRadius: 5,\n    textAlign: 'center'\n  },\n  checkbox: {}\n});","map":{"version":3,"sources":["C:/Users/Cale/Documents/projects/todolist-firebase/App/Component/List.js"],"names":["React","useEffect","Swipeable","List","props","obj","todos","Object","entries","items","swipeRightOpen","progress","key","setTimeout","onRemove","swipeRight","flex","backgroundColor","justifyContent","alignItems","paddingVertical","paddingHorizontal","marginVertical","borderRadius","color","fontWeight","forEach","value","push","styles","textDecorationLine","isCompleted","text","checkbox","noItem","container","StyleSheet","create","paddingTop","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","padding","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,SAAP,MAAsB,wCAAtB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAE/B,MAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,GAAcC,MAAM,CAACC,OAAP,CAAeJ,KAAK,CAACE,KAArB,CAAd,GAA4C,IAAxD;AACA,MAAMG,KAAK,GAAG,EAAd;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,GAAX,EAAkB;AACrCC,IAAAA,UAAU,CAAC,YAAI;AACXT,MAAAA,KAAK,CAACU,QAAN,CAAeF,GAAf;AACH,KAFS,EAEP,GAFO,CAAV;AAGH,GAJD;;AAUA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAK;AAEpB,WACI,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AACGC,QAAAA,eAAe,EAAE,WADpB;AAEGC,QAAAA,cAAc,EAAE,QAFnB;AAGGC,QAAAA,UAAU,EAAE,UAHf;AAIGC,QAAAA,eAAe,EAAE,EAJpB;AAKGC,QAAAA,iBAAiB,EAAE,EALtB;AAMGC,QAAAA,cAAc,EAAE,CANnB;AAOGC,QAAAA,YAAY,EAAE;AAPjB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELH,QAAAA,iBAAiB,EAAE,EAFd;AAGLI,QAAAA,UAAU,EAAE;AAHP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADJ;AAqBH,GAvBD;;AAsDA,MAAGpB,GAAG,IAAI,IAAV,EAAe;AACXA,IAAAA,GAAG,CAACqB,OAAJ,CAAY,gBAAkB;AAAA;AAAA,UAAhBd,GAAgB;AAAA,UAAXe,KAAW;;AACtBlB,MAAAA,KAAK,CAACmB,IAAN,CAAW,oBAAC,SAAD;AACP,QAAA,oBAAoB,EAAE,8BAACjB,QAAD;AAAA,iBAAcD,cAAc,CAACC,QAAD,EAAWC,GAAX,CAA5B;AAAA,SADf;AAIP,QAAA,kBAAkB,EAAEG,UAJb;AAIyB,QAAA,GAAG,EAAEH,GAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiB,MAAM,CAACpB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACA,QAAA,KAAK,EAAE;AAACqB,UAAAA,kBAAkB,EAAEH,KAAK,CAACI,WAAN,GAAoB,cAApB,GAAoC;AAAzD,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAC0EJ,KAAK,CAACK,IADhF,CADJ,EAII,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,MAAM,CAACI,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CALD,CAAX;AAWP,KAZD;AAaH,GAdD,MAcK;AACDxB,IAAAA,KAAK,CAACmB,IAAN,CAAW,oBAAC,IAAD;AAAO,MAAA,GAAG,EAAE,CAAZ;AAAe,MAAA,KAAK,EAAEC,MAAM,CAACK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAX;AACH;;AAEJ,SACC,oBAAC,YAAD;AAAe,IAAA,KAAK,EAAEL,MAAM,CAACM,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM1B,KAFN,CADD;AAOA;AAED,IAAMoB,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,UAAU,EAAE;AADL,GADkB;AAI7B7B,EAAAA,KAAK,EAAE;AACH8B,IAAAA,KAAK,EAAE,MADJ;AAEHvB,IAAAA,IAAI,EAAE,CAFH;AAGHI,IAAAA,eAAe,EAAE,EAHd;AAIHC,IAAAA,iBAAiB,EAAE,EAJhB;AAKHJ,IAAAA,eAAe,EAAE,MALd;AAMHK,IAAAA,cAAc,EAAE,CANb;AAOHC,IAAAA,YAAY,EAAE,EAPX;AAQHiB,IAAAA,WAAW,EAAE,SARV;AASHC,IAAAA,YAAY,EAAE;AACVF,MAAAA,KAAK,EAAE,CADG;AAEVG,MAAAA,MAAM,EAAE;AAFE,KATX;AAaHC,IAAAA,aAAa,EAAE,IAbZ;AAcHC,IAAAA,YAAY,EAAE,IAdX;AAgBHC,IAAAA,SAAS,EAAE,CAhBR;AAiBH1B,IAAAA,UAAU,EAAE;AAjBT,GAJsB;AAuB7Be,EAAAA,MAAM,EAAG;AACLK,IAAAA,KAAK,EAAE,MADF;AAELO,IAAAA,OAAO,EAAE,EAFJ;AAGLtB,IAAAA,KAAK,EAAE,KAHF;AAILF,IAAAA,cAAc,EAAE,CAJX;AAKLC,IAAAA,YAAY,EAAE,CALT;AAMLwB,IAAAA,SAAS,EAAE;AANN,GAvBoB;AA+B7Bd,EAAAA,QAAQ,EAAC;AA/BoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { StyleSheet, Text, SafeAreaView, View, CheckBox  } from 'react-native';\r\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\r\n\r\nexport default function List(props){\r\n\r\n    const obj = props.todos ? Object.entries(props.todos) : null;\r\n    const items = [];\r\n\r\n    const swipeRightOpen = (progress, key) =>{\r\n        setTimeout(()=>{\r\n            props.onRemove(key)\r\n        }, 500)\r\n    }\r\n\r\n    // const swipeLeftOpen = (progress, key) =>{\r\n    //     props.onUpdateTodo({isCompleted: true}, key);\r\n    // }\r\n\r\n    const swipeRight = () =>{\r\n\r\n        return (\r\n            <View  \r\n              style={{ flex: 1,\r\n                        backgroundColor: 'firebrick', \r\n                        justifyContent: 'center', \r\n                        alignItems: 'flex-end',\r\n                        paddingVertical: 10,\r\n                        paddingHorizontal: 13,\r\n                        marginVertical: 5, \r\n                        borderRadius: 20}}>\r\n              <Text\r\n                style={{\r\n                  color: 'white',\r\n                  paddingHorizontal: 10,\r\n                  fontWeight: '600'\r\n                }}>\r\n                Delete\r\n              </Text>\r\n            </View >\r\n          );\r\n\r\n    }\r\n\r\n    // const swipeLeft = (progress, isCompleted) =>{\r\n\r\n    //     if(!isCompleted){\r\n    //         return (\r\n    //             <View  \r\n    //             onPress={progress.openRight}\r\n    //               style={{ flex: 1,\r\n    //                         backgroundColor: '#37D7B2', \r\n    //                         justifyContent: 'center',\r\n    //                         paddingVertical: 10,\r\n    //                         paddingHorizontal: 13,\r\n    //                         marginVertical: 5, \r\n    //                         borderRadius: 20}}>\r\n    //               <Text\r\n    //                 style={{\r\n    //                   color: 'white',\r\n    //                   paddingHorizontal: 10,\r\n    //                   fontWeight: '600'\r\n    //                 }}>\r\n    //                 Completed\r\n    //               </Text>\r\n    //             </View >\r\n    //           );\r\n    //     }\r\n\r\n\r\n    // } \r\n\r\n\r\n    if(obj != null){\r\n        obj.forEach(([key, value]) => {\r\n                items.push(<Swipeable \r\n                    onSwipeableRightOpen={(progress) => swipeRightOpen(progress, key)}\r\n                    // onSwipeableLeftOpen={(progress) => swipeLeftOpen(progress, key)}\r\n                    // renderLeftActions={(progress) => swipeLeft(progress, value.isCompleted)} key={key}\r\n                    renderRightActions={swipeRight} key={key}>\r\n                            <View style={styles.items}>\r\n                                <Text  \r\n                                style={{textDecorationLine: value.isCompleted ? 'line-through': 'none'}}>{value.text}\r\n                                </Text>\r\n                                <CheckBox style={styles.checkbox}></CheckBox>\r\n                            </View></Swipeable >)\r\n        });\r\n    }else{\r\n        items.push(<Text  key={1} style={styles.noItem} >NO ITEM</Text>)\r\n    }\r\n\r\n return(\r\n  <SafeAreaView  style={styles.container}>\r\n      \r\n      { items }\r\n     \r\n  </SafeAreaView>\r\n );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 10\r\n    },\r\n    items: {\r\n        width: '100%',\r\n        flex: 1,\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        backgroundColor: '#FFF',\r\n        marginVertical: 5,\r\n        borderRadius: 20,\r\n        shadowColor: \"#646464\",\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        \r\n        elevation: 5,\r\n        alignItems: 'flex-start'\r\n    },\r\n    noItem : {\r\n        width: '100%',\r\n        padding: 10,\r\n        color: 'red',\r\n        marginVertical: 2,\r\n        borderRadius: 5,\r\n        textAlign: 'center' \r\n    },\r\n    checkbox:{\r\n        // alignItems: 'flex-end'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}